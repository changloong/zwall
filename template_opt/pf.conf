# macros
int_if = "re0"
ext_if = "re1"
icmp_types = "echoreq"

# options
set timeout { interval 30, frag 10 }
set timeout { tcp.first 120, tcp.opening 30, tcp.established 3600 }
set timeout { tcp.closing 120, tcp.finwait 45, tcp.closed 90 }
set timeout { udp.first 60, udp.single 30, udp.multiple 60 }
set timeout { icmp.first 20, icmp.error 10 }
set timeout { other.first 60, other.single 30, other.multiple 60 }
set limit { states 20000, frags 5000 }
set block-policy drop
set loginterface $ext_if
set optimization aggressive
set require-order yes

# scrub
scrub in on $ext_if all
#scrub out on $ext_if all random-id max-mss 1492

# nat/rdr
#nat on $ext_if from $int_if:network to any -> ($ext_if)
nat on $ext_if from {192.168.0.0/16} to any -> ($ext_if)
#rdr on $ext_if proto tcp from any to $ext_if port 65432 -> 192.168.0.11 port 3389

# filter rules
block all
#antispoof quick for $int_if inet
pass quick on lo0 all
pass in quick on $int_if inet from $int_if:network to any flags S/SA keep state
pass in quick on $int_if reply-to ($int_if $int_gw) inet from $lan_net to any flags S/SA keep state
#pass out quick route-to ($int_if $int_gw) inet from any to $lan_net flags S/SA keep state

# ssh
pass in quick on $ext_if reply-to ($ext_if $ext_gw) proto tcp from any to $ext_ip port 22 flags S/SA keep state
#pass out route-to ($ext_if $ext_gw) inet from $int_if:network to any flags S/SA keep state
pass out quick route-to ($ext_if $ext_gw) inet from $lan_net to any flags S/SA keep state
pass out route-to ($ext_if $ext_gw) inet from any to any flags S/SA keep state

